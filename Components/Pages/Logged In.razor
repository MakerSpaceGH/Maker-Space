@page "/Logged In"
@using My_own_website.Services
@inject LoginManager LoginManager
@inject NavigationManager Navigation
@inject IWebHostEnvironment Env
@rendermode InteractiveServer

<h3 style="color:#1E3A8A; margin-bottom: 0.5rem;">Buchungen Übersicht</h3>
<p style="color:#1E3A8A; font-weight: 600; margin-top: 0; margin-bottom: 1.5rem;">
    Hallo, @LoginManager.CurrentUsername!
</p>

<select class="form-select mb-3" style="max-width:250px" @onchange="OnKategorieChanged">
    <option value="raum" selected="@(SelectedKategorie == "raum")">Maker Space Buchungen</option>
    <option value="workshop" selected="@(SelectedKategorie == "workshop")">Workshop Buchungen</option>
</select>

<button class="btn btn-secondary" @onclick="Logout" style="margin-bottom:1rem;">Logout</button>

@if (buchungen == null)
{
    <p>Lade Buchungen...</p>
}
else if (buchungen.Count == 0)
{
    <p>Keine Buchungen gefunden.</p>
}
else
{
    <table class="table table-striped table-bordered" style="max-width:1000px; color:#0D47A1;">
        <thead style="background-color:#E3F2FD;">
            <tr>
                @if (SelectedKategorie == "raum")
                {
                    <th>🗓️ Datum</th>
                    <th>⏰ Uhrzeit</th>
                    <th>🏫 Klasse</th>
                    <th>👤 Schüler</th>
                    <th>🔑 Code</th>
                    <th>✅ Status</th>
                    <th>🛠️ Aktion</th>
                }
                else
                {
                    <th>🗓️ Datum</th>
                    <th>👤 Name</th>
                    <th>🏫 Klasse</th>
                    <th>🎯 Workshop</th>
                    <th>📆 Termin</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var b in buchungen)
            {
                if (SelectedKategorie == "raum")
                {
                    <tr>
                        <td>@b.Datum</td>
                        <td>@b.Uhrzeit</td>
                        <td>@b.Klasse</td>
                        <td>@b.Schueler</td>
                        <td>@b.Code</td>
                        <td>
                            @if (b.Status == "accept")
                            {
                                <span style="color:green; font-weight:bold;">Akzeptiert</span>
                            }
                            else
                            {
                                <span style="color:#0D47A1;">Offen</span>
                            }
                        </td>
                        <td>
                            @if (b.Status != "accept")
                            {
                                <button class="btn btn-primary btn-sm" @onclick="() => MarkAccept(b)">Kommen</button>
                                <button class="btn btn-danger btn-sm ms-2" @onclick="() => DeleteBuchung(b)">Nicht gekommen</button>
                            }
                            else
                            {
                                <em>Abgehakt</em>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    var line = b.Datum;
                    string name = "-", klasse = "-", workshop = "-", termin = "-";
                    var parts = line.Split(" - ");
                    if (parts.Length == 2)
                    {
                        var userInfo = parts[1].Split("→");
                        if (userInfo.Length == 2)
                        {
                            var nameKlasse = userInfo[0].Trim();
                            var title = userInfo[1].Trim();

                            var openParen = nameKlasse.IndexOf('(');
                            var closeParen = nameKlasse.IndexOf(')');
                            if (openParen > 0 && closeParen > openParen)
                            {
                                name = nameKlasse.Substring(0, openParen).Trim();
                                klasse = nameKlasse.Substring(openParen + 1, closeParen - openParen - 1).Trim();
                            }
                            workshop = title.Split('|')[0].Trim();
                            termin = title.Contains("Termin:") ? title.Split("Termin:")[1].Trim() : "-";
                        }
                    }

                    <tr>
                        <td>@(parts[0])</td>
                        <td>@name</td>
                        <td>@klasse</td>
                        <td>@workshop</td>
                        <td>@termin</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

<style>
    .btn {
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #0d6efd;
        color: white;
    }

        .btn-primary:hover {
            background-color: #084bcc;
        }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #b02a37;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #565e64;
        }
</style>

@code {
    class Buchung
    {
        public string Datum { get; set; }
        public string Uhrzeit { get; set; }
        public string Klasse { get; set; }
        public string Schueler { get; set; }
        public string Code { get; set; }
        public string Status { get; set; } = "";
    }

    List<Buchung> buchungen;
    string SelectedKategorie = "raum";

    string RaumPath => Path.Combine(Env.ContentRootPath, "Data", "buchungen.txt");
    string WorkshopPath => Path.Combine(Env.ContentRootPath, "Data", "workshops.txt");

    protected override async Task OnInitializedAsync()
    {
        if (!LoginManager.IsLoggedIn)
        {
            await InvokeAsync(() => Navigation.NavigateTo("/"));
            return;
        }

        LoadBuchungen();
    }

    void OnKategorieChanged(ChangeEventArgs e)
    {
        SelectedKategorie = e.Value?.ToString() ?? "raum";
        LoadBuchungen();
    }

    void LoadBuchungen()
    {
        buchungen = new List<Buchung>();
        string path = SelectedKategorie == "raum" ? RaumPath : WorkshopPath;

        if (!File.Exists(path)) return;

        var lines = File.ReadAllLines(path);
        foreach (var line in lines)
        {
            if (string.IsNullOrWhiteSpace(line)) continue;

            if (SelectedKategorie == "raum")
            {
                var parts = line.Split(';');
                if (parts.Length < 5) continue;

                string status = parts.Length > 5 && parts[5].Trim().ToLower() == "accept" ? "accept" : "";
                buchungen.Add(new Buchung
                    {
                        Datum = parts[0].Trim(),
                        Uhrzeit = parts[1].Trim(),
                        Klasse = parts[2].Trim(),
                        Schueler = parts[3].Trim(),
                        Code = parts[4].Trim(),
                        Status = status
                    });
            }
            else
            {
                buchungen.Add(new Buchung { Datum = line });
            }
        }
    }

    void SaveBuchungen()
    {
        var lines = buchungen.Select(b =>
            $"{b.Datum};{b.Uhrzeit};{b.Klasse};{b.Schueler};{b.Code}" + (b.Status == "accept" ? ";accept" : ""));
        File.WriteAllLines(RaumPath, lines);
    }

    void MarkAccept(Buchung b)
    {
        b.Status = "accept";
        SaveBuchungen();
        StateHasChanged();
    }

    void DeleteBuchung(Buchung b)
    {
        buchungen.Remove(b);
        SaveBuchungen();
        StateHasChanged();
    }

    void Logout()
    {
        LoginManager.Logout();
        Navigation.NavigateTo("/");
    }
}
